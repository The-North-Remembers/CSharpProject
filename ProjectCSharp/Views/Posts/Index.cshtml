@using System.Diagnostics.Eventing.Reader
@using ProjectCSharp.Classes
@model IEnumerable<ProjectCSharp.Models.Post>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
           <h3>@Html.DisplayNameFor(model => model.Title)</h3> 
        </th>
        <th>
           <h3>@Html.DisplayNameFor(model => model.Body)</h3>  
        </th>
        <th>
            <h3>@Html.DisplayNameFor(model => model.Date)</h3>
        </th>
        <th>
            <h3>Author</h3> 
        </th>
        <th>
            <h3>Actions</h3> 
        </th>

    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            <h4>@Html.DisplayFor(modelItem => item.Title)</h4>
        </td>
        <td>
            @Utilities.CutText(item.Body)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @if (item.Author != null)
            {
               <i>@item.Author.UserName</i> 
            }
            else
            {
              @: <i>(Without Author)</i>
            }
        </td>
        <td>
            @if (User.IsInRole("Administrator"))
                {
                  @Html.ActionLink("Edit |", "Edit", new { id = item.Id })
                  @Html.ActionLink(" Details |", "Details", new { id = item.Id })
                  @Html.ActionLink(" Delete", "Delete", new { id = item.Id })
                }
            else
                {
                  @Html.ActionLink("Details", "Details", new { id = item.Id })
                }
              
        </td>
    </tr>
}
</table>
